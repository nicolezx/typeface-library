@import "global";

body {
  @media screen and (min-width: $mobile) {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: $padding-2x;
  }

  > * {
    padding: $padding;
  }
}

header {
  position: sticky;
  top: 0;
  left: 0;
  flex-shrink: 0;
  transition: all $transition;

  @media screen and (max-width: $mobile) {
    margin-bottom: $padding;
    background: rgb(255, 255, 255);
    box-shadow: 0 0 5px $grey;
    // background: linear-gradient(
    //   180deg,
    //   rgba(255, 0, 0, 0.8) 33%,
    //   rgba(255, 0, 0, 0) 100%
    // );
  }
}

.content {
  max-width: 1000px;
  height: 100vh;
  gap: $padding;
  overflow-y: scroll;
}

.content {
  > .channel,
  > .block {
    padding: $padding;
    border: $border-black;
    flex: 1;
    flex-grow: 0;
  }

  .channel {
    width: 100%;
    display: flex;

    @media screen and (min-width: $mobile) {
      // flex-direction: column-reverse;
      flex-direction: row;
      gap: $padding-2x;
    }

    @media screen and (max-width: $mobile) {
      // flex-direction: column-reverse;
      flex-direction: column;
      gap: $padding;
    }

    .block-info {
      flex: 1;
      display: flex;
      flex-direction: column;
      gap: $gap;
      justify-content: flex-start;
      // justify-content: space-between;
      // position: sticky;
      // top: $padding;
    }

    .block-content {
      // display: grid;
      // grid-template-columns: repeat(2, 1fr);
      // gap: $padding;
      flex: 2;

      img {
        // aspect-ratio: 1/1;
        // border: $border-black;
        // object-fit: contain;
        // margin-block: -4vh;
      }

      img:first-child {
        // margin-top: -6vh;
      }

      img:last-child {
        // margin-bottom: -6vh;
      }
    }
  }
}

.channel {
  transition: height 0.3s ease-in;

  img {
    transition: all 0.3s ease-in;
  }

  &[data-toggled="true"] {
    img:nth-of-type(n + 4) {
      height: max-content;
      opacity: 1;
    }
  }

  &[data-toggled="false"] {
    img:nth-of-type(n + 4) {
      // display: none;
      opacity: 0;
      height: 0px;
      overflow: hidden;
    }
  }
}

input {
  display: none;
}

label {
  cursor: pointer;
  transition: opacity $transition;

  &:hover {
    opacity: $opacity;
  }
}
